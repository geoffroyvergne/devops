---

- name: Init kube
  shell: |
    kubeadm config images pull
    kubeadm init \
      --apiserver-advertise-address={{ k8s_apiserver_advertise_address }} \
      --node-name $(hostname) --pod-network-cidr={{ k8s_pod_network_cidr }}  \
      --apiserver-cert-extra-sans={{ k8s_apiserver_cert_extra_sans }} \
      --ignore-preflight-errors=all
  args:
    creates: /etc/kubernetes/admin.conf

#       --kubernetes-version=1.5 \

- name: Add master as worker
  shell: |
    kubectl taint nodes --all node-role.kubernetes.io/master-
    touch $HOME/master-as-worker.initialized
  args:
    creates: master-as-worker.initialized
  when: k8s_master_as_worker == True

- name: Flannel Installation
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
    touch $HOME/flannel.initialized
  args:
    creates: flannel.initialized
  when: k8s_network_type == 'flannel'

- name: Install cloud.weave
  shell: |
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    touch $HOME/weave.initialized
  args:
    creates: weave.initialized
  when: k8s_network_type == 'weave'

#- name: Register config
#  shell : "cat $HOME/.kube/config"
#  register: kube_config

#- name: "Init config for user"
#  file:
#    path: $HOME/.kube
#    state: directory
#    mode: "u=rwx,g=,o="
#  delegate_to: "{{ item }}"
#  become: false
#  loop:
#  - localhost
#  - "{{ k8s_master_node }}"

#- name: "Copy config and config locally"
#  copy:
#    content: "{{ kube_config.stdout }}"
#    dest: $HOME/.kube/config
#  delegate_to: "{{ item }}"
#  become: false
#  loop:
#  - localhost
#  - "{{ k8s_master_node }}"